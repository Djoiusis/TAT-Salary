import streamlit as st
import pandas as pd

# D√©finition des taux fixes
TAXES_FIXES = {
    "AVS": 5.30 / 100,
    "AC": 1.10 / 100,
    "Assurance maternit√©": 0.032 / 100,
    "AANP": 0.63 / 100,
    "APG": 0.495 / 100
}

# D√©finition des taux LPP en fonction de l'√¢ge
LPP_COTISATIONS = {
    (25, 34): 4.20 / 100,
    (35, 44): 5.70 / 100,
    (45, 54): 8.70 / 100,
    (55, 65): 10.20 / 100
}

# Fonction pour r√©cup√©rer le taux d'imp√¥t depuis Excel
def get_taux_impot(df):
    """R√©cup√®re le taux d'imp√¥t √† la source depuis la base Excel"""
    row = df[df.iloc[:, 0] == "Retenue imp√¥t √† la source"]
    if not row.empty:
        return float(row.iloc[0, 1])
    return 0

# Fonction de calcul du salaire net
def calculer_salaire_net(salaire_brut, age, df_impots):
    """Calcule les d√©ductions sociales et le salaire net"""
    
    # Calcul des d√©ductions fixes
    avs = salaire_brut * TAXES_FIXES["AVS"]
    ac = salaire_brut * TAXES_FIXES["AC"]
    maternite = salaire_brut * TAXES_FIXES["Assurance maternit√©"]
    aanp = salaire_brut * TAXES_FIXES["AANP"]
    apg = salaire_brut * TAXES_FIXES["APG"]

    # Calcul de la cotisation LPP
    cotisation_lpp = next((taux for (min_age, max_age), taux in LPP_COTISATIONS.items() if min_age <= age <= max_age), 0) * salaire_brut

    # Calcul de l'imp√¥t √† la source (r√©cup√©r√© du fichier)
    taux_impot_source = get_taux_impot(df_impots)
    impot_source = salaire_brut * taux_impot_source

    # Total des d√©ductions
    total_deductions = avs + ac + maternite + aanp + apg + cotisation_lpp + impot_source

    # Salaire net
    salaire_net = salaire_brut - total_deductions

    return salaire_net, cotisation_lpp, avs, ac, maternite, aanp, apg, impot_source, total_deductions

# Interface Streamlit
st.title("üßæ Calcul du Salaire Net")

# T√©l√©chargement du fichier Excel
fichier_excel = st.file_uploader("üìÇ T√©l√©chargez le fichier Excel des imp√¥ts", type=["xlsx"])

if fichier_excel:
    df_impots = pd.read_excel(fichier_excel)

    # Entr√©es utilisateur
    salaire_brut = st.number_input("üí∞ Salaire Brut (CHF)", min_value=0, value=13333, step=500)
    age = st.number_input("üéÇ √Çge", min_value=18, max_value=70, value=30)

    # Calcul des r√©sultats
    salaire_net, cotisation_lpp, avs, ac, maternite, aanp, apg, impot_source, total_deductions = calculer_salaire_net(salaire_brut, age, df_impots)

    # Affichage des r√©sultats
    st.subheader("üìä R√©sultat")
    st.write(f"üí∞ **Salaire brut :** {salaire_brut:.2f} CHF")
    st.write(f"üè¶ **Caisse de pension LPP :** -{cotisation_lpp:.2f} CHF")
    st.write(f"üìâ **Total d√©ductions sociales :** -{total_deductions:.2f} CHF")
    st.write(f"‚úÖ **Salaire net :** {salaire_net:.2f} CHF")

    # Affichage sous forme de fiche de paie
    st.subheader("üìë Fiche de paie")
    st.write("| **D√©signation**                 | **Montant (CHF)** |")
    st.write("|--------------------------------|------------------|")
    st.write(f"| üí∞ Salaire Brut                 | {salaire_brut:.2f} |")
    st.write(f"| üè¶ Caisse de pension LPP        | -{cotisation_lpp:.2f} |")
    st.write(f"| üèõ Retenue AVS                  | -{avs:.2f} |")
    st.write(f"| üè¢ Cotisations AC               | -{ac:.2f} |")
    st.write(f"| üè• Assurance maternit√©          | -{maternite:.2f} |")
    st.write(f"| üöë Cotisations AANP             | -{aanp:.2f} |")
    st.write(f"| üè• Cotisations APG              | -{apg:.2f} |")
    st.write(f"| üèõ Retenue imp√¥t √† la source    | -{impot_source:.2f} |")
    st.write(f"| üìâ **Total d√©ductions sociales** | -{total_deductions:.2f} |")
    st.write(f"| ‚úÖ **Salaire Net**              | **{salaire_net:.2f}** |")
